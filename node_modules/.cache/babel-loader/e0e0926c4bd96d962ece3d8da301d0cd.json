{"ast":null,"code":"import React,{useEffect,useRef}from'react';import PropTypes from'prop-types';import{gsap}from'gsap';import{ScrollTrigger}from'gsap/ScrollTrigger';import'./index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";gsap.registerPlugin(ScrollTrigger);function FullScreenParallax(props){var ref=useRef(null);useEffect(function(){var rootElement=ref.current;var borderElement=rootElement.querySelector('.full-screen-parallax-border');var timeline=gsap.timeline({scrollTrigger:{trigger:rootElement,start:\"top top\",end:\"bottom top\",scrub:true,onEnter:function onEnter(self){gsap.to(borderElement,{borderWidth:0});if(props.onEnter){props.onEnter(self);}},onEnterBack:function onEnterBack(self){if(props.onEnter){props.onEnter(self);}},onLeave:function onLeave(self){if(props.onLeave){props.onLeave(self);}},onLeaveBack:function onLeaveBack(self){if(props.onLeave){props.onLeave(self);}},onToggle:function onToggle(self){if(self.progress===0&&self.direction===-1){gsap.to(borderElement,{borderWidth:150});}}}});gsap.utils.toArray(rootElement.querySelectorAll('.full-screen-parallax-text-wrapper')).forEach(function(el,i){var textEl=el.querySelector('.full-screen-parallax-text');var tl=gsap.timeline();tl.fromTo(textEl,{y:0,opacity:0},{y:-120,opacity:1});tl.to(textEl,{opacity:0,y:-240});tl.eventCallback('onStart',function(){if(props.onEnterItem){props.onEnterItem(props.data[i]);}});timeline.add(tl);});return function(){timeline.kill();};},[props.data]);return/*#__PURE__*/_jsx(\"div\",{className:\"full-screen-parallax-root\",ref:ref,children:/*#__PURE__*/_jsxs(\"div\",{className:\"full-screen-parallax\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"full-screen-parallax-media-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"full-screen-parallax-media\",children:props.mediaComponent}),props.data.map(function(d,i){return/*#__PURE__*/_jsx(\"div\",{className:\"full-screen-parallax-text-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"full-screen-parallax-text\",children:props.renderItem(d)})},i);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"full-screen-parallax-border\"})]})});}FullScreenParallax.props={mediaComponent:PropTypes.node.isRequired,data:PropTypes.array.isRequired,renderItem:PropTypes.func.isRequired,onEnter:PropTypes.func,onLeave:PropTypes.func,onEnterItem:PropTypes.func,onLeaveItem:PropTypes.func};export default FullScreenParallax;","map":{"version":3,"sources":["/Users/graham_bates/Documents/Dev/procdemo2/src/components/FullScreenParalax/index.js"],"names":["React","useEffect","useRef","PropTypes","gsap","ScrollTrigger","registerPlugin","FullScreenParallax","props","ref","rootElement","current","borderElement","querySelector","timeline","scrollTrigger","trigger","start","end","scrub","onEnter","self","to","borderWidth","onEnterBack","onLeave","onLeaveBack","onToggle","progress","direction","utils","toArray","querySelectorAll","forEach","el","i","textEl","tl","fromTo","y","opacity","eventCallback","onEnterItem","data","add","kill","mediaComponent","map","d","renderItem","node","isRequired","array","func","onLeaveItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport './index.css';\n\ngsap.registerPlugin(ScrollTrigger);\n\nfunction FullScreenParallax(props) {\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const rootElement = ref.current;\n        const borderElement = rootElement.querySelector('.full-screen-parallax-border');\n\n        const timeline = gsap.timeline({\n            scrollTrigger: {\n                trigger: rootElement,\n                start: \"top top\",\n                end: \"bottom top\",\n                scrub: true,\n                onEnter: (self) => {\n                    gsap.to(\n                        borderElement,\n                        { borderWidth: 0 },\n                    );\n                    \n                    if (props.onEnter) {\n                        props.onEnter(self);\n                    }\n                },\n                onEnterBack: (self) => {\n                    if (props.onEnter) {\n                        props.onEnter(self);\n                    }\n                },\n                onLeave: (self) => {\n                    if (props.onLeave) {\n                        props.onLeave(self);\n                    }\n                },\n                onLeaveBack: (self) => {\n                    if (props.onLeave) {\n                        props.onLeave(self);\n                    }\n                },\n                onToggle: (self) => {\n                    if (self.progress === 0 && self.direction === -1) {\n                        gsap.to(\n                            borderElement,\n                            { borderWidth: 150 },\n                        );\n                    }\n                },\n            }\n        });\n\n        gsap.utils.toArray(rootElement.querySelectorAll('.full-screen-parallax-text-wrapper')).forEach((el, i) => {\n            const textEl = el.querySelector('.full-screen-parallax-text');\n            const tl = gsap.timeline();\n            \n            tl.fromTo(\n                textEl,\n                { y: 0, opacity: 0 },\n                { y: -120, opacity: 1 },\n            );\n            tl.to(textEl, { opacity: 0, y: -240 });\n            \n            tl.eventCallback('onStart', () => {\n                if (props.onEnterItem) {\n                    props.onEnterItem(props.data[i]);\n                }\n            });\n\n            timeline.add(tl);\n        });\n\n        return () => {\n            timeline.kill();\n        }\n    }, [props.data]);\n\n    return (\n        <div className=\"full-screen-parallax-root\" ref={ref}>\n            <div className=\"full-screen-parallax\">\n                <div className=\"full-screen-parallax-media-wrapper\">\n                    <div className=\"full-screen-parallax-media\">\n                        {props.mediaComponent}\n                    </div>\n                    {props.data.map((d, i) => (\n                        <div className=\"full-screen-parallax-text-wrapper\" key={i}>\n                            <div className=\"full-screen-parallax-text\">\n                                {props.renderItem(d)}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"full-screen-parallax-border\" />\n            </div>\n        </div>\n    );\n}\n\nFullScreenParallax.props = {\n    mediaComponent: PropTypes.node.isRequired,\n    data: PropTypes.array.isRequired,\n    renderItem: PropTypes.func.isRequired,\n    onEnter: PropTypes.func,\n    onLeave: PropTypes.func,\n    onEnterItem: PropTypes.func,\n    onLeaveItem: PropTypes.func,\n};\n\nexport default FullScreenParallax;\n"]},"metadata":{},"sourceType":"module"}