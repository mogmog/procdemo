{"version":3,"sources":["logo.svg","components/Procedural/index.js","components/FullScreenParalax/index.js","components/FullScreenParalax/FullScreenProceduralExample.js","App.js","reportWebVitals.js","index.js"],"names":["datasource","elevation","apiKey","imagery","urlFormat","attribution","ProceduralComponent","props","myRef","React","createRef","className","ref","this","compassVisible","displayLocation","location","Component","FullScreenParallax","useRef","useEffect","rootElement","current","borderElement","querySelector","timeline","gsap","scrollTrigger","trigger","start","end","scrub","onEnter","self","to","borderWidth","onEnterBack","onLeave","onLeaveBack","onToggle","progress","direction","utils","toArray","querySelectorAll","forEach","el","i","textEl","tl","fromTo","y","opacity","eventCallback","onEnterItem","data","add","kill","mediaComponent","map","d","renderItem","registerPlugin","ScrollTrigger","PropTypes","node","isRequired","array","func","onLeaveItem","_renderItem","itemData","type","style","fontSize","lineHeight","text","borderRadius","padding","backgroundColor","color","fontWeight","border","outline","FullScreenProceduralExample","useState","animationDuration","longitude","latitude","height","angle","bearing","setLocation","texts","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.361818f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport ProceduralMap from 'procedural-gl-react';\n\nconst datasource = {\n    elevation: {\n        apiKey: '1b045ec93f5b94db894037db8d297128e'\n    },\n    imagery: {\n        urlFormat: 'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=cZQg2QaktSnI18BSAxZX',\n        attribution: '<a href=\"https://www.maptiler.com/copyright/\">Maptiler</a> <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }\n}\n\nexport default class ProceduralComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    render() {\n        return (\n            <div className=\"Map\">\n                <ProceduralMap\n                    ref={this.myRef}\n                    datasource={datasource}\n                    compassVisible={false}\n                    displayLocation={this.props.location}\n                />\n            </div>\n        );\n    }\n}\n\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport './index.css';\n\ngsap.registerPlugin(ScrollTrigger);\n\nfunction FullScreenParallax(props) {\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const rootElement = ref.current;\n        const borderElement = rootElement.querySelector('.full-screen-parallax-border');\n\n        const timeline = gsap.timeline({\n            scrollTrigger: {\n                trigger: rootElement,\n                start: \"top top\",\n                end: \"bottom top\",\n                scrub: true,\n                onEnter: (self) => {\n                    gsap.to(\n                        borderElement,\n                        { borderWidth: 0 },\n                    );\n                    \n                    if (props.onEnter) {\n                        props.onEnter(self);\n                    }\n                },\n                onEnterBack: (self) => {\n                    if (props.onEnter) {\n                        props.onEnter(self);\n                    }\n                },\n                onLeave: (self) => {\n                    if (props.onLeave) {\n                        props.onLeave(self);\n                    }\n                },\n                onLeaveBack: (self) => {\n                    if (props.onLeave) {\n                        props.onLeave(self);\n                    }\n                },\n                onToggle: (self) => {\n                    if (self.progress === 0 && self.direction === -1) {\n                        gsap.to(\n                            borderElement,\n                            { borderWidth: 150 },\n                        );\n                    }\n                },\n            }\n        });\n\n        gsap.utils.toArray(rootElement.querySelectorAll('.full-screen-parallax-text-wrapper')).forEach((el, i) => {\n            const textEl = el.querySelector('.full-screen-parallax-text');\n            const tl = gsap.timeline();\n            \n            tl.fromTo(\n                textEl,\n                { y: 0, opacity: 0 },\n                { y: -120, opacity: 1 },\n            );\n            tl.to(textEl, { opacity: 0, y: -240 });\n            \n            tl.eventCallback('onStart', () => {\n                if (props.onEnterItem) {\n                    props.onEnterItem(props.data[i]);\n                }\n            });\n\n            timeline.add(tl);\n        });\n\n        return () => {\n            timeline.kill();\n        }\n    }, [props.data]);\n\n    return (\n        <div className=\"full-screen-parallax-root\" ref={ref}>\n            <div className=\"full-screen-parallax\">\n                <div className=\"full-screen-parallax-media-wrapper\">\n                    <div className=\"full-screen-parallax-media\">\n                        {props.mediaComponent}\n                    </div>\n                    {props.data.map((d, i) => (\n                        <div className=\"full-screen-parallax-text-wrapper\" key={i}>\n                            <div className=\"full-screen-parallax-text\">\n                                {props.renderItem(d)}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"full-screen-parallax-border\" />\n            </div>\n        </div>\n    );\n}\n\nFullScreenParallax.props = {\n    mediaComponent: PropTypes.node.isRequired,\n    data: PropTypes.array.isRequired,\n    renderItem: PropTypes.func.isRequired,\n    onEnter: PropTypes.func,\n    onLeave: PropTypes.func,\n    onEnterItem: PropTypes.func,\n    onLeaveItem: PropTypes.func,\n};\n\nexport default FullScreenParallax;\n","import React, {useState} from 'react';\nimport Procedural from '../Procedural';\nimport FullScreenParallax from './index';\n\nconst _renderItem = (itemData) => {\n    if (itemData.type === 'withButton') {\n        return (\n            <div>\n                <p style={{ fontSize: '24px', lineHeight: 1.5 }}>\n                    {itemData.text}\n                </p>\n                <button\n                    style={{\n                        borderRadius: '32',\n                        padding: '12px 24px',\n                        backgroundColor: 'transparent',\n                        color: '#fff',\n                        fontSize: '16px',\n                        fontWeight: 700,\n                        border: '1px solid #fff',\n                        outline: 'none'\n                    }}\n                >\n                    Watch HD Video\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <h1 style={{ fontSize: '48px', fontWeight: 700 }}>\n            {itemData.text}\n        </h1>\n    );\n}\n\nfunction FullScreenProceduralExample() {\n\n    const [location, setLocation] = useState({\n        animationDuration : 2,\n        longitude: 7.698941573782926,\n        latitude: 45.74338484004915,\n        height: 2183.358398660126,\n        angle: 36.11883143607126,\n        bearing: 70.35532994923864\n    });\n\n    return (\n        <FullScreenParallax\n            mediaComponent={(\n                <Procedural\n                    location={location}\n                />\n            )}\n            data={[\n                { text: 'Get out there.', type: 'text', longitude : 7.698941573782926, },\n                { longitude : 7.798941573782926, text: 'So many mountains.', type: 'text' },\n                { longitude : 7.858941573782926, text: 'So much time.', type: 'text' },\n            ]}\n            renderItem={_renderItem}\n            onEnterItem={(data) => {\n              setLocation({...location, longitude: data.longitude})\n            }}\n            texts={[\n                <h1 style={{ fontSize: '48px', fontWeight: 700 }}>\n                    Get results that match the intensity of your flights.\n                </h1>,\n                <div>\n                    <p style={{ fontSize: '24px', lineHeight: 1.5 }}>\n                        Powerful propulsion capabilities combined with a 150° super-wide\n                        FOV provide an unrivaled view. 4x Slow Motion, RockSteady stabilization,\n                        and distortion correction give pilots even smoother, more dramatic results.\n                    </p>\n                    <button\n                        style={{\n                            borderRadius: '32',\n                            padding: '12px 24px',\n                            backgroundColor: 'transparent',\n                            color: '#fff',\n                            fontSize: '16px',\n                            fontWeight: 700,\n                            border: '1px solid #fff',\n                            outline: 'none'\n                        }}\n                    >\n                        Watch HD Video\n                    </button>\n                </div>\n            ]}\n        />\n    )\n}\n\nexport default FullScreenProceduralExample;\n","import logo from './logo.svg';\nimport './App.css';\nimport FullScreenProceduralExample from './components/FullScreenParalax/FullScreenProceduralExample';\nimport FullScreenVideoExample from './components/FullScreenParalax/FullScreenVideoExample';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <FullScreenProceduralExample  />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}